 apply plugin: 'java'
 apply plugin: 'eclipse'
 repositories { 
	 mavenCentral() 
 } 
    dependencies {
          compile  fileTree(dir: 'lib', include: '*.jar')
	      testCompile 'junit:junit:4.8.2'
    }
 version = '1.0'
  jar {
        manifest.attributes 'Main-Class' : 'com.cmcc.andbaby.main.Main'
        manifest.attributes 'Class-Path' : '. ./lib/guava-19.0.jar ./lib/commons-logging-1.1.3.jar ./lib/libthrift-0.9.3.jar ./lib/slf4j-api-1.6.4.jar ./lib/slf4j-log4j12-1.6.4.jar ./lib/log4j-1.2.17.jar ./lib/commons-pool-1.6.jar ./lib/commons-pool2-2.4.2.jar ./lib/spring-expression-3.2.3.RELEASE.jar ./lib/spring-core-3.2.3.RELEASE.jar ./lib/spring-beans-3.2.3.RELEASE.jar ./lib/spring-context-3.2.3.RELEASE.jar ./lib/zookeeper-3.4.9.jar ./lib/curator-recipes-3.3.0.jar ./lib/curator-client-2.5.0.jar ./lib/curator-framework-2.6.0.jar ./lib/curator-x-discovery-2.9.1.jar ./lib/curator-x-discovery-server-2.5.0.jar'
  }


//依赖编译，然后打包JAR  
task taskJar(type:Jar, dependsOn: compileJava) {  
    from 'build/classes'  
    destinationDir = file('build/libs')  
}  
  
//清除上次的编译过的文件  
task clearPj(type:Delete){  
   delete 'build','target'  
}  
  
  
//把JAR复制到目标目录  
task release(type: Copy,dependsOn: [clearPj,taskJar]) {  
    from('build/libs') {  
        include '*.*'  
    }  
    into ('target')  
}  